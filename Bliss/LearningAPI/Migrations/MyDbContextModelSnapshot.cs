// <auto-generated />
using System;
using BlissAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlissAPI.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BlissAPI.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Benefits")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Memberships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Benefits = "Access to basic features",
                            Cost = 0,
                            EndDate = new DateTime(2026, 1, 14, 8, 34, 48, 101, DateTimeKind.Local).AddTicks(9845),
                            StartDate = new DateTime(2025, 1, 14, 8, 34, 48, 101, DateTimeKind.Local).AddTicks(9833),
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Benefits = "Access to green features",
                            Cost = 50,
                            EndDate = new DateTime(2026, 1, 14, 8, 34, 48, 101, DateTimeKind.Local).AddTicks(9853),
                            StartDate = new DateTime(2025, 1, 14, 8, 34, 48, 101, DateTimeKind.Local).AddTicks(9852),
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Benefits = "Access to all features",
                            Cost = 100,
                            EndDate = new DateTime(2026, 1, 14, 8, 34, 48, 101, DateTimeKind.Local).AddTicks(9855),
                            StartDate = new DateTime(2025, 1, 14, 8, 34, 48, 101, DateTimeKind.Local).AddTicks(9855),
                            Type = 2
                        });
                });

            modelBuilder.Entity("BlissAPI.Models.RewardPoints", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResetDay")
                        .HasColumnType("datetime");

                    b.HasKey("UserId");

                    b.ToTable("RewardPoints");
                });

            modelBuilder.Entity("BlissAPI.Models.SupportTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AssignedTo")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SupportTickets");
                });

            modelBuilder.Entity("BlissAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MembershipId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BlissAPI.Models.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ClaimedBy")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("varchar(21)");

                    b.Property<string>("ImageFile")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("MemberType")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ValidDuration")
                        .HasColumnType("int");

                    b.Property<int>("VoucherType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Vouchers");

                    b.HasDiscriminator().HasValue("Voucher");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ResolvedDescription")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("SendBy")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupportTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("SupportTicketId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("BlissAPI.Models.DiscountVoucher", b =>
                {
                    b.HasBaseType("BlissAPI.Models.Voucher");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("double");

                    b.Property<double>("MaxAmount")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("DiscountVoucher");
                });

            modelBuilder.Entity("BlissAPI.Models.GiftCardVoucher", b =>
                {
                    b.HasBaseType("BlissAPI.Models.Voucher");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasDiscriminator().HasValue("GiftCardVoucher");
                });

            modelBuilder.Entity("BlissAPI.Models.ItemVoucher", b =>
                {
                    b.HasBaseType("BlissAPI.Models.Voucher");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ItemVoucher");
                });

            modelBuilder.Entity("BlissAPI.Models.RewardPoints", b =>
                {
                    b.HasOne("BlissAPI.Models.User", null)
                        .WithOne("RewardPoints")
                        .HasForeignKey("BlissAPI.Models.RewardPoints", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlissAPI.Models.User", b =>
                {
                    b.HasOne("BlissAPI.Models.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("BlissAPI.Models.Voucher", b =>
                {
                    b.HasOne("BlissAPI.Models.User", "User")
                        .WithMany("Vouchers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Chat", b =>
                {
                    b.HasOne("BlissAPI.Models.SupportTicket", "SupportTicket")
                        .WithMany()
                        .HasForeignKey("SupportTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupportTicket");
                });

            modelBuilder.Entity("BlissAPI.Models.User", b =>
                {
                    b.Navigation("RewardPoints");

                    b.Navigation("Vouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
